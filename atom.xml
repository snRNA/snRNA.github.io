<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>snRNA&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-27T13:52:19.572Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>snRNA</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Web_For_Pentester</title>
    <link href="http://yoursite.com/2016/08/27/Web-For-Pentester/"/>
    <id>http://yoursite.com/2016/08/27/Web-For-Pentester/</id>
    <published>2016-08-27T13:30:11.000Z</published>
    <updated>2016-08-27T13:52:19.572Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Web-For-Penterser-I&quot;&gt;&lt;a href=&quot;#Web-For-Penterser-I&quot; class=&quot;headerlink&quot; title=&quot;Web For Penterser I&quot;&gt;&lt;/a&gt;Web For Penterser I&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;本篇主要用于记录使用pentersterlab的学习历程，缘起大二小学期的密码学课程实践中的ECB附加实验 &lt;a href=&quot;https://sec.cuc.edu.cn/huangwei/wiki/teaching_ac_2016_calendar.html#toc_5&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;here&lt;/a&gt;&lt;br&gt;。之后看到这个网站&lt;a href=&quot;https://pentesterlab.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;penterlab&lt;/a&gt;,遂使用上面的教程学习，本文是关于web方面的基础。   &lt;/p&gt;
&lt;p&gt;ps:本篇先讲解使用方法，下载对应课程的ISO镜像（一般为32位的Debian系统），在虚拟机中使用就好（类似于liveCD的形式，各种环境已在ISO中配好），在外部就可以访问（注意http-only要在同一网段，或者虚拟机NAT上网采用端口转发）  &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;network.jpg&quot; alt=&quot;network_set&quot;&gt;  &lt;/p&gt;
&lt;p&gt;主机访问localhost即可进入页面：   &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;localhost.png&quot; alt=&quot;home_page&quot;&gt;   &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;XSS&quot;&gt;&lt;a href=&quot;#XSS&quot; class=&quot;headerlink&quot; title=&quot;XSS&quot;&gt;&lt;/a&gt;XSS&lt;/h3&gt;&lt;p&gt;三种常见的XSS类型不多赘述，直接进题目   &lt;/p&gt;
&lt;h4 id=&quot;example1&quot;&gt;&lt;a href=&quot;#example1&quot; class=&quot;headerlink&quot; title=&quot;example1&quot;&gt;&lt;/a&gt;example1&lt;/h4&gt;&lt;p&gt;无过滤的最简单的形式，传入的参数是name，猜想后端php应该是直接echo了 $_GET[‘name’]。&lt;br&gt;&lt;strong&gt;payload:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;即可实现弹窗显示1的效果。  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### example2  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例2对于script这个关键词进行了过滤但是可以使用例如sCRIpt这样的大小写混淆的方式进行XSS绕过，利用对于大小写没有进行过滤且html语言大小写的不敏感实现。  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**payload:**  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;```?name=&amp;lt;scRiPT&amp;gt;alert(1);&amp;lt;/sCRIpt&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;example3&quot;&gt;&lt;a href=&quot;#example3&quot; class=&quot;headerlink&quot; title=&quot;example3&quot;&gt;&lt;/a&gt;example3&lt;/h4&gt;&lt;p&gt;例三有了新的过滤，尝试例1的payload发现只显示了alert1所以猜想的是对&amp;lt;&amp;gt;进行了过滤，尝试输入pen&amp;lt;script&amp;gt;testerlab，过滤后的效果是penterterlab,就是会进行关键字过滤后对剩余的字段进行拼接，那么就构造的payload是中间有被过滤字符，而前后两端的被过滤字符拼接后仍为所需要的被过滤字符即可，payload如下:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### example4  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例四输入例1的payload后回车直接显示error	,这次的服务器端直接匹配script，只要出现script就会导致error的产生，所以这次的payload完全不能出现script字符串然而还要运行javascript脚本。HTML的标签中的事件可以执行js脚本。所以添加个img标签或dir &amp;amp;lt;a等,绑定事件onerror，onmousermove等。测试payload如下：  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;```?name=&amp;lt;img src=&amp;apos;zzzz&amp;apos; onerror=&amp;apos;alert(1)&amp;apos; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;example5&quot;&gt;&lt;a href=&quot;#example5&quot; class=&quot;headerlink&quot; title=&quot;example5&quot;&gt;&lt;/a&gt;example5&lt;/h4&gt;&lt;p&gt;例5测试发现过滤了关键词alert，可以采用其他的函数达到同样的效果例如confirm&lt;br&gt;&lt;strong&gt;payload 1:&lt;/strong&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;src=&#39;zzzz&#39; onerror=&#39;confirm(1)&#39;&lt;/span&gt;&lt;a href=&quot;/&gt;```&quot;&gt;link&lt;/a&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;此外还可以使用eval()函数与Stirng.fromCharCode函数结合  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**payload 2:**   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;```?name=&amp;lt;img src=&amp;quot;1&amp;quot; onerror=&amp;quot;eval(String.fromCharCode(97,108,101,114,116,40,49,41))&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;p&gt;上述数值为alert(1)各字符对应的十进制ascii码。   &lt;/p&gt;
&lt;h4 id=&quot;example6&quot;&gt;&lt;a href=&quot;#example6&quot; class=&quot;headerlink&quot; title=&quot;example6&quot;&gt;&lt;/a&gt;example6&lt;/h4&gt;&lt;p&gt;例6，首先打开页面后并没有见到Hello,hacker而是只有hello，查看页面源代码在其中看到有一段js代码name变量的值被利用到了script中。&lt;br&gt;&lt;img src=&quot;xss_example6.png&quot; alt=&quot;xss_example6&quot;&gt;&lt;br&gt;所以payload的利用方式就是先闭合引号然后再alert最后将后面的代码注释即可。&lt;br&gt;&lt;strong&gt;payload:&lt;/strong&gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### example7   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例7，跟上个题目类似，只不过这次对于特定的符号例如双引号，尖括号等进行了html_encode，这次$a后面接的是单引号，单引号默认情况不会被encode所以只需简单修改payload即可。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**payload：**   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;```?name=hacker&amp;apos;;alert($a);//&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;example8&quot;&gt;&lt;a href=&quot;#example8&quot; class=&quot;headerlink&quot; title=&quot;example8&quot;&gt;&lt;/a&gt;example8&lt;/h4&gt;&lt;p&gt;例8，此题打开的时候存在输入框，有一定可能是存储型XSS，尝试后没有成功，根据官网课程的提示得知form表单中的url可以进行XSS注入，刚进入的初始页面如下：&lt;br&gt;&lt;img src=&quot;xss_example8_1.png&quot; alt=&quot;xss_example8_1&quot;&gt;&lt;br&gt;对于form表单中的action进行修改.&lt;br&gt;&lt;strong&gt;payload:&lt;/strong&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;onsubmit=&quot;alert(1);```&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;修改之后的页面变为：  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![xss_example8_2](xss_example8_2.png)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这样就实现了输入后提交进行弹窗的效果。   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### example9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;例9，比较简单，跟例1相同只不过这次是跟在符号#后面输入payload。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;但是这次的形式是DOM-based XSS,查看页面源代码可以获取到相关信息。    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**payload:**   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;```#&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;END&quot;&gt;&lt;a href=&quot;#END&quot; class=&quot;headerlink&quot; title=&quot;END&quot;&gt;&lt;/a&gt;END&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Web-For-Penterser-I&quot;&gt;&lt;a href=&quot;#Web-For-Penterser-I&quot; class=&quot;headerlink&quot; title=&quot;Web For Penterser I&quot;&gt;&lt;/a&gt;Web For Penterser I&lt;/h2&gt;&lt;hr&gt;

    
    </summary>
    
    
      <category term="2016" scheme="http://yoursite.com/tags/2016/"/>
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Answer for CS network quizzes</title>
    <link href="http://yoursite.com/2016/06/16/Answer-for-CS-network-quizzes/"/>
    <id>http://yoursite.com/2016/06/16/Answer-for-CS-network-quizzes/</id>
    <published>2016-06-16T03:29:13.000Z</published>
    <updated>2016-06-16T03:37:31.978Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Answer-for-CS-network-quizzes&quot;&gt;&lt;a href=&quot;#Answer-for-CS-network-quizzes&quot; class=&quot;headerlink&quot; title=&quot;Answer for CS network quizzes&quot;&gt;&lt;/a&gt;Answer for CS network quizzes&lt;/h1&gt;&lt;p&gt;Quiz 1   &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;B 2. C 3. A 4. A 5. A 6. D 7. A 8. D  9. D 10. D&lt;br&gt;&lt;a href=&quot;https://quizlet.com/106378313/cse-4344-quiz4-flash-cards/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;部分参考来源&lt;/a&gt;  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Quiz 2  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;D 2. B. 3. D 4. A 5. C 6. D 7. A 8. BC 9. D 10. C&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Quiz 3  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;D 2. D 3. C 4. B 5. D 6. A 7. D 8. B 9. A 10. C&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Quiz 4&lt;br&gt;1~5: FFFTT&lt;br&gt;6~10: FTFTF&lt;/p&gt;
&lt;p&gt;Quiz 5&lt;br&gt;1~5: TTFFF&lt;br&gt;6~10: FTTTT&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://studymooc.nbu.edu.cn/nodedetailcontroller/visitnodedetail?knowledgeId=647739&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;部分参考来源&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Quiz 6&lt;br&gt;1~5: FFFFT&lt;br&gt;6~10: TFFTT&lt;/p&gt;
&lt;h2 id=&quot;后面的题目答案缺失&quot;&gt;&lt;a href=&quot;#后面的题目答案缺失&quot; class=&quot;headerlink&quot; title=&quot;后面的题目答案缺失&quot;&gt;&lt;/a&gt;后面的题目答案缺失&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;有错的麻烦指出&lt;/strong&gt;&lt;br&gt;&lt;del&gt;~我不管哟&lt;/del&gt;~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Answer-for-CS-network-quizzes&quot;&gt;&lt;a href=&quot;#Answer-for-CS-network-quizzes&quot; class=&quot;headerlink&quot; title=&quot;Answer for CS network quizzes&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="2016" scheme="http://yoursite.com/tags/2016/"/>
    
      <category term="computer_network" scheme="http://yoursite.com/tags/computer-network/"/>
    
  </entry>
  
  <entry>
    <title>why it start?</title>
    <link href="http://yoursite.com/2016/04/02/why-it-start/"/>
    <id>http://yoursite.com/2016/04/02/why-it-start/</id>
    <published>2016-04-02T13:03:17.000Z</published>
    <updated>2016-04-02T13:30:40.266Z</updated>
    
    <content type="html">&lt;h2 id=&quot;0x01-Write-Something&quot;&gt;&lt;a href=&quot;#0x01-Write-Something&quot; class=&quot;headerlink&quot; title=&quot;#0x01 Write Something&quot;&gt;&lt;/a&gt;#0x01 Write Something&lt;/h2&gt;&lt;p&gt;好不容易把blog搭的差不多了（其实都有教程…），写这篇主要是练练markdown语法的。嗯。感觉现在自己身边个人公众号的氛围还是蛮热烈的，但讲道理来说 as a coder 最好还是能有一个自己的技术博客吧…&lt;/p&gt;
&lt;h2 id=&quot;0x02&quot;&gt;&lt;a href=&quot;#0x02&quot; class=&quot;headerlink&quot; title=&quot;#0x02&quot;&gt;&lt;/a&gt;#0x02&lt;/h2&gt;&lt;p&gt;markdown的语法 我主要还是就会个#号键，慢慢来吧..这个是用github+hexo进行搭建的，主题是Next，等过几日有钱有一定几率去买个域名折腾个服务器blablah….&lt;/p&gt;
&lt;h2 id=&quot;0x03&quot;&gt;&lt;a href=&quot;#0x03&quot; class=&quot;headerlink&quot; title=&quot;#0x03&quot;&gt;&lt;/a&gt;#0x03&lt;/h2&gt;&lt;p&gt;说是技术博客但是还是会有一定几率出现其他的内容的，技术的话，日常学习遇到的坑，很好的东西的收藏以及碎片化知识分类的整理都会include.&lt;/p&gt;
&lt;h2 id=&quot;0x04&quot;&gt;&lt;a href=&quot;#0x04&quot; class=&quot;headerlink&quot; title=&quot;#0x04&quot;&gt;&lt;/a&gt;#0x04&lt;/h2&gt;&lt;p&gt;暂时想不到了。。先这些吧&lt;/p&gt;
&lt;h3 id=&quot;2016-04-12&quot;&gt;&lt;a href=&quot;#2016-04-12&quot; class=&quot;headerlink&quot; title=&quot;2016-04-12&quot;&gt;&lt;/a&gt;2016-04-12&lt;/h3&gt;&lt;p&gt;TODO：&lt;br&gt;&lt;br&gt;1.postman测试接口&lt;br&gt;&lt;br&gt;2.blog评论功能开通&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x01-Write-Something&quot;&gt;&lt;a href=&quot;#0x01-Write-Something&quot; class=&quot;headerlink&quot; title=&quot;#0x01 Write Something&quot;&gt;&lt;/a&gt;#0x01 Write Something&lt;/h2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>First snRNA&#39;s article</title>
    <link href="http://yoursite.com/2016/04/02/First-snRNA-s-article/"/>
    <id>http://yoursite.com/2016/04/02/First-snRNA-s-article/</id>
    <published>2016-04-02T03:02:02.000Z</published>
    <updated>2016-04-02T03:04:41.435Z</updated>
    
    <content type="html">&lt;h1 id=&quot;My-First-article&quot;&gt;&lt;a href=&quot;#My-First-article&quot; class=&quot;headerlink&quot; title=&quot;My First article&quot;&gt;&lt;/a&gt;My First article&lt;/h1&gt;&lt;p&gt;This is my personal blog using hexo and github. I am still praticing it. So it may be not beautiful. Please look forward to the update.&lt;/p&gt;
&lt;p&gt;##张乐是狗&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;My-First-article&quot;&gt;&lt;a href=&quot;#My-First-article&quot; class=&quot;headerlink&quot; title=&quot;My First article&quot;&gt;&lt;/a&gt;My First article&lt;/h1&gt;&lt;p&gt;This is my per
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/04/02/hello-world/"/>
    <id>http://yoursite.com/2016/04/02/hello-world/</id>
    <published>2016-04-02T02:30:52.715Z</published>
    <updated>2016-04-02T02:30:52.715Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
